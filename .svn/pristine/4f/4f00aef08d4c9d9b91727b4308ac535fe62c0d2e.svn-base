var mysql = require('mysql');
var conn = require('./utility.js');

var logger = global.logger;



exports.endPool = function(callback){
	conn.endPool(callback);
}

exports.getAllStockCode = function(callback){
	var sql = "select stock_code from stock_base_info";
	conn.executeSql(sql, [], callback);
}

exports.updateVolumeProportion = function(stockCode, day2, day3, day4, callback){
	var sql = "update stock_amount_info set day2 = ?, day3 = ?, day4 = ? "
	+" where stock_code = ? and date = "
	+"(select xx.date from "
	+"(select date from stock_amount_info aa where aa.stock_code = ? order by date DESC limit 1) xx)";
	conn.executeSql(sql, [day2, day3, day4, stockCode, stockCode], callback);
}

exports.updateStockBaseInfo = function(stockCode, priceearning, marketValue, flowMarketValue, pb, roe, price, callback){
	var sql = "update stock_base_info set priceearning = ?, marketValue = ?, flowMarketValue = ? , pb = ?, roe = ?, price = ?"
	+" where stock_code = ?";
	conn.executeSql(sql, [priceearning, marketValue, flowMarketValue, pb, roe, price, stockCode], callback);
}

exports.getStockByCode = function(stock_code, callback){
	
	var sql = "select a.*, b.stock_name from stock_amount_info a,stock_base_info b where a.stock_code = ? "
	+ "and a.stock_code=b.stock_code and a.amount<>0 and a.price<>0 and a.volume<>0 order by date DESC limit 15";
	
	conn.executeSql(sql, [stock_code], callback);
}

exports.getStockNowByCode = function(stock_code, callback){
	var sql = "select a.*, b.stock_name from stock_now_info a, stock_base_info b where a.stock_code = ? "
	+"and a.stock_code = b.stock_code order by timestamp DESC limit 1";
	conn.executeSql(sql, [stock_code], callback);
}

exports.insertStockNow = function(stockCode, amount, date, time, price, yesterday_price, fluctuate, priceearning, marketValue, flowMarketValue, volume, pb, callback){
	var timestamp = Date.now()/1000;
	var sql = "insert into stock_now_info (stock_code, amount, price, yesterday_price, date, time, timestamp, fluctuate, priceearning, marketValue, flowMarketValue, volume, pb) "
	+" values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
	conn.executeSql(sql, [stockCode, amount, price, yesterday_price, date, time, timestamp, fluctuate, priceearning, marketValue, flowMarketValue, volume, pb], callback);
}

exports.insertStockAmount = function(stock_code, amount, date, time, price, fluctuate, priceearning, marketValue, flowMarketValue, volume, pb, callback){
	var timestamp = Date.now()/1000;
	var sql = "insert into stock_amount_info (stock_code, amount, price, date, time, timestamp, fluctuate, priceearning, marketValue, flowMarketValue, volume, pb) "
	+" values(?,?,?,?,?,?,?,?,?,?,?,?)";
	conn.executeSql(sql, [stock_code, amount, price, date, time, timestamp, fluctuate, priceearning, marketValue, flowMarketValue, volume, pb], callback);
}

exports.getLastStockDate = function(callback){
	var sql = "select date from stock_amount_info a order by date DESC limit 1";
	conn.executeSql(sql, [], callback);
}

exports.emptyStockNowInfo = function(callback){
	var sql = "delete from stock_now_info";
	conn.executeSql(sql, [], callback);
}

exports.addMissedStockCode = function(stock_code, callback){
	var myDate = new Date();
	//logger.info(myDate.Date());

	var sql = "insert into missed_stock_info(stock_code, date) values(?, ?)";
	conn.executeSql(sql, [stock_code, myDate.toString()], callback);
}


exports.getTopDay2 = function(callback){
	var sql = "select aa.*,bb.stock_name from stock_amount_info aa, stock_base_info bb "
			+"where aa.date = "
			+"(select date from stock_amount_info order by date desc limit 1) "
			+" and aa.stock_code = bb.stock_code "
			+" and aa.stock_code like '600%' "
			+" and bb.stock_name not like '%ST%' "
			+" order by aa.day2/(aa.flowMarketValue*10000) desc limit 10";
	conn.executeSql(sql, [], callback);
}



