var express = require('express');
var router = express.Router();
var logger = global.logger;
var config = require('./config');
var conn = require('./utility');
var xml2js = require('xml2js');
var databaseOperation = require('./databaseOperation');


var wechatFeedbackStr = "回复股票代码，查看成交量变化;回复股票代码+now,查看实时行情;"
+"回复top1查询最近一日较前一日成交量正向波动前十股票;" 
+ "回复top2查询最近两日较前两日成交量正向波动前十股票;"
+"回复top3查询最近三日较前三日成交量正向波动前十股票"
+"回复now1,now2,now3查询实时成交量排名(同top1，top2，top3)";


var crawl = require('./stockCrawl.js');

router.get('/stockTest', function(req, res) {
	res.send(__filename);
});


//wechat connect test
router.get('/checkwechat', function(req, res) {
	logger.debug("enter wechat to check signature");

	if (req.query.echostr != undefined) {
		checkToken(req, res);
	} else {
		logger.debug("undefined signature");
	}
});

router.get('/crawlday', function(req, res){
	logger.info('crawl day job start');
	crawl.startGetAllStockInfo();

	res.send('crawl day job start');
});


router.get('/crawlnow', function(req, res){
	logger.info('crawl now job start');
	crawl.startCrawlStockNow();

	res.send('crawl now job start');
});


router.post('/checkwechat', function(req, res) {
	var formData = "";
	req.on("data", function(data) {
		formData += data;
	});

	req.on("end", function() {
		var parseString = xml2js.parseString;
		parseString(formData, function(err, json) {
			if (err) {
				err.status = 400;
			} else {
				req.body = json;
				analyzeMessage(req.body.xml.Content, req, res);
			}
		});
	});
});


function checkDigit(str){
	var letters="0123456789";
	for(var i=0;i<str.length;i++){
		if(letters.indexOf (str[i])==-1){
			return false;
		}
		
	}
	return true ;
}

function packageTopData(day_str, result, req, res){
	var feedbackStr = result[0].date+" "+result[0].time+"\n";
	feedbackStr+="最近"+day_str+"日资金正流向排名\n";
	for(var i = 0;i<result.length;++i){
		var element = result[i];
		feedbackStr+=(element.stock_name+"("+element.stock_code+")")+"\n";
		feedbackStr+=(element.price+"("+element.fluctuate+"%)");
		feedbackStr+= ("市盈率"+element.priceearning)+"\n";
		feedbackStr+= ("流通市值"+element.flowMarketValue+"亿");
		feedbackStr+=("资金净流入"+(element.day_volume/10000).toFixed(2)+"亿")+"\n";
		feedbackStr+=("占比"+(element.day_volume/(element.flowMarketValue*100)).toFixed(2)+"%");
		feedbackStr+="\n";
	}
	feedbackToWechat(req, res, feedbackStr);
}

function packageTopData3(result, req, res){
	var feedbackStr = result[0].date+" "+result[0].time+"\n";
	for(var i = 0;i<result.length;++i){
		var element = result[i];
		feedbackStr+=(element.stock_name+"("+element.stock_code+")")+"\n";
		feedbackStr+=(element.price+"("+element.fluctuate+"%)");
		feedbackStr+= ("市盈率"+element.priceearning)+"\n";
		feedbackStr+= ("流通市值"+element.flowMarketValue+"亿");
		feedbackStr+=("资金净流入"+(element.day3/10000).toFixed(2)+"亿")+"\n";
		feedbackStr+=("占比"+(element.day3/(element.flowMarketValue*100)).toFixed(2)+"%");
		feedbackStr+="\n";
	}
	feedbackToWechat(req, res, feedbackStr);
}

function packageTopData4(result, req, res){
	var feedbackStr = result[0].date+" "+result[0].time+"\n";
	for(var i = 0;i<result.length;++i){
		var element = result[i];
		feedbackStr+=(element.stock_name+"("+element.stock_code+")")+"\n";
		feedbackStr+=(element.price+"("+element.fluctuate+"%)");
		feedbackStr+= ("市盈率"+element.priceearning)+"\n";
		feedbackStr+= ("流通市值"+element.flowMarketValue+"亿");
		feedbackStr+=("资金净流入"+(element.day4/10000).toFixed(2)+"亿")+"\n";
		feedbackStr+=("占比"+(element.day4/(element.flowMarketValue*100)).toFixed(2)+"%");
		feedbackStr+="\n";
	}
	feedbackToWechat(req, res, feedbackStr);
}


function handleStock(stockCode, req, res){
	var feedbackStr = "";

	if (conn.isMarketOpenTime()) {
		//开市时间
		databaseOperation.getStockNowByCode(stockCode, function(flag, result){
			if (flag) {
				if (result.length>0) {
					var nowElement = result[0];
					feedbackStr = "实时数据\n";
					feedbackStr += nowElement.date+" "+nowElement.time+"\n";
					feedbackStr += (nowElement.stock_name+"("+nowElement.stock_code+")\n"
					+nowElement.price+"("+nowElement.fluctuate+"%)\n"
					+"成交量 "+(nowElement.amount/10000.0).toFixed(2)+"万手\n"
					+"市盈率 "+nowElement.priceearning+"\n"
					+"总市值 "+nowElement.marketValue+"亿\n"
					+"流通市值 "+nowElement.flowMarketValue+"亿\n"
					+"成交金额 "+(nowElement.volume/10000.0).toFixed(2)+"亿\n");

					databaseOperation.getStockByCode(stockCode, function(flag, result){
						if (flag) {
							if (result.length>0) {
								var element = result[0];
								var day2 = element.volume*conn.getPlusMinus(element.fluctuate)+nowElement.volume*conn.getPlusMinus(nowElement.fluctuate);
								var day3 = element.day2+nowElement.volume*conn.getPlusMinus(nowElement.fluctuate);
								var day4 = element.day3+nowElement.volume*conn.getPlusMinus(nowElement.fluctuate);
								feedbackStr += ("最近两日资金"+getWord((day2/10000.0).toFixed(2))+", 占比"+((100*Math.abs(day2/10000.0)/nowElement.flowMarketValue)).toFixed(2)+"%\n"
								+"最近三日资金"+getWord((day3/10000.0).toFixed(2))+", 占比"+((100*Math.abs(day3/10000.0)/nowElement.flowMarketValue)).toFixed(2)+"%\n"
								+"最近四日资金"+getWord((day4/10000.0).toFixed(2))+", 占比"+((100*Math.abs(day4/10000.0)/nowElement.flowMarketValue)).toFixed(2)+"%\n");
							}
							feedbackToWechat(req, res, feedbackStr);

						}else{
							logger.error(result);
							feedbackToWechat(req, res, "数据库错误");
						}
					});

				}else{
					logger.warn(stockCode+" 未找到记录");
					feedbackToWechat(req, res, stockCode+" 未找到记录, 回复+股票代码 参与股票数据完善计划");
				}

			}else{
				logger.error(result);
				feedbackToWechat(req, res, "数据库错误");
			}
		});

		//feedbackToWechat(req, res, "开市时间");

	}else{
		//闭市时间
		databaseOperation.getStockByCode(stockCode, function(flag, result){
			if (flag) {
				if (result.length>0) {
					logger.debug(stockCode+" 获得记录");
					var element = result[0];
					feedbackStr = element.stock_name+"("+element.stock_code+")\n"
					+element.price+"("+element.fluctuate+"%)\n"
					+"成交量 "+(element.amount/10000).toFixed(2)+"万手\n"
					+"成交金额 "+(element.volume/10000.0).toFixed(2)+"亿\n"
					+"市盈率 "+element.priceearning+"\n"
					+"净资产收益率 "+(element.pb*100/element.priceearning).toFixed(2)+"%\n"
					+"总市值 "+element.marketValue+"亿\n"
					+"流通市值 "+element.flowMarketValue+"亿\n"
					+"最近两日资金"+getWord((element.day2/10000.0).toFixed(2))+", 占比"+(100*Math.abs(element.day2/10000.0)/element.flowMarketValue).toFixed(2)+"%\n"
					+"最近三日资金"+getWord((element.day3/10000.0).toFixed(2))+", 占比"+(100*Math.abs(element.day3/10000.0)/element.flowMarketValue).toFixed(2)+"%\n"
					+"最近四日资金"+getWord((element.day4/10000.0).toFixed(2))+", 占比"+(100*Math.abs(element.day4/10000.0)/element.flowMarketValue).toFixed(2)+"%\n"
					+element.date+" "+element.time+"\n";
					feedbackToWechat(req, res, feedbackStr);
				}else{
					logger.warn(stockCode+" 未找到记录");
					feedbackToWechat(req, res, stockCode+" 未找到记录, 回复+股票代码 参与股票数据完善计划");
				}
			}else{
				logger.error(result);
				feedbackToWechat(req, res, "数据库错误");
			}
		});
	}
}

function getWord(volume){
	if (volume>=0) {
		return "净流入"+Math.abs(volume)+"亿";
	}else{
		return "净流出"+Math.abs(volume)+"亿";
	}
}

function analyzeMessage(msg, req, res) {
	logger.info(msg);
	var msgStr = msg.toString();
	if(msgStr == "help"){
		feedbackToWechat(req, res, wechatFeedbackStr);
		return;
	}else if (checkDigit(msgStr)) {
		logger.info('is stock code');
		handleStock(msgStr, req, res);
		return;
	}else if (msgStr.indexOf('+')!=-1){
		var missedStockCode = msgStr.substr(1, msgStr.length - 1);
		logger.info('add missed stockCode '+missedStockCode);
		
		databaseOperation.addMissedStockCode(missedStockCode, function(flag, result){
			if (flag) {

			}else{
				logger.error(result);
			}
		});

		feedbackToWechat(req, res, "已经通知后台添加股票代码:"+missedStockCode+"\n 感谢您参与股票数据完善计划");
	}else if(msgStr.indexOf("top")!=-1){
		var pre_code = msgStr.substr(0, 2);
		var day_str = msgStr.substr(msgStr.length - 1, 1);
		if (pre_code == null||day_str == null) {
			feedbackToWechat(req, res, "命令错误");
			return;
		}
		if (pre_code != "30"
			&&pre_code != "60"
			&&pre_code != "00"){
			feedbackToWechat(req, res, "命令错误");
			return;
		}
		if (parseInt(day_str) == NaN) {
			feedbackToWechat(req, res, "命令错误");
			return;
		}
		

		logger.info("get "+msgStr+" command");
		databaseOperation.getTopDay(day_str, pre_code, function(flag, result){
			if (flag) {
				if (result.length>0) {
					packageTopData(day_str, result, req, res);
				}else{
					feedbackToWechat(req, res, "还没有排序后数据");
				}

			}else{
				logger.error(result);
			}
		});
	}else{
		feedbackToWechat(req, res, wechatFeedbackStr);
		return;
	}

	// if (msg == "top1") {
	// 	getDaysTopFluctuate(req, res, 1, 1);
	// 	return;
	// }

	// if (msg == "top2") {
	// 	getDaysTopFluctuate(req, res, 2, 2);
	// 	return;
	// }

	// if (msg == "top3") {
	// 	getDaysTopFluctuate(req, res, 3, 3);
	// 	return;
	// }

	// if (msg == "now1") {
	// 	getNowDaysTopFluctuate(req, res, 1);
	// 	return;
	// }

	// if (msg == "now2") {
	// 	getNowDaysTopFluctuate(req, res, 2);
	// 	return;
	// }

	// if (msg == "now3") {
	// 	getNowDaysTopFluctuate(req, res, 3);
	// 	return;
	// }

	// var msgStr = msg.toString();
	// if (msgStr.indexOf('now') != -1) {
	// 	getNowStockCompare(req, res, msgStr);
	// 	return;
	// }

	// if(msgStr.indexOf('my') != -1){
	// 	getSecret(req, res, msgStr);
	// 	return;
	// }


	// databaseOperation.getStockAmount(msg, function(flag, result) {
	// 	if (flag && result) {
	// 		if (result.length == 0) {
	// 			feedbackToWechat(req, res, wechatHelpStr);
	// 		} else {

	// 			if (result.length > 0) {
	// 				var fluctuateOne = caculateAmountFluctuate(result, 1, 1);
	// 				var fluctuateTwo = caculateAmountFluctuate(result, 2, 2);
	// 				var fluctuateThree = caculateAmountFluctuate(result, 3, 3);

	// 				var item = result[0];
	// 				var feedbackStr = item.stock_name + "(" + item.stock_code + ") " + item.date + "成交量为" + (item.amount / (100 * 10000)).toFixed(2) + "万手。\n";
	// 				if (fluctuateOne != false) {
	// 					if (fluctuateOne > 0) {
	// 						feedbackStr = feedbackStr + "比前一交易日成交量(" + (result[1].amount / (100 * 10000)).toFixed(2) + "万手)高出" + fluctuateOne + "%。\n"
	// 					} else {
	// 						feedbackStr = feedbackStr + "比前一交易日成交量(" + (result[1].amount / (100 * 10000)).toFixed(2) + "万手)低出" + Math.abs(fluctuateOne) + "%。\n";
	// 					}
	// 				}

	// 				if (fluctuateTwo != false) {
	// 					if (fluctuateTwo > 0) {
	// 						feedbackStr = feedbackStr + "最近两日比前两日平均成交量高出" + fluctuateTwo + "%。\n"
	// 					} else {
	// 						feedbackStr = feedbackStr + "最近两日比前两日平均成交量低出" + Math.abs(fluctuateTwo) + "%。\n";
	// 					}
	// 				}

	// 				if (fluctuateThree != false) {
	// 					if (fluctuateThree > 0) {
	// 						feedbackStr = feedbackStr + "最近三日比前三日平均成交量高出" + fluctuateThree + "%。\n"
	// 					} else {
	// 						feedbackStr = feedbackStr + "最近三日比前三日平均成交量低出" + Math.abs(fluctuateThree) + "%。\n";
	// 					}
	// 				}

	// 				feedbackToWechat(req, res, feedbackStr);
	// 			}
	// 		}
	// 	} else {
	// 		console.log("database error in analyzeMessage");
	// 		feedbackToWechat(req, res, "我挂了,稍等");
	// 		return;
	// 	}
	// });
}


function feedbackToWechat(req, res, content) {
	var timestamp = parseInt(Date.now() / 1000);
	var msgType = "text";
	//logger.info("Longitude:"+ req.body.xml.Longitude);
	var textTpl = "<xml>" + "<ToUserName><![CDATA[" + req.body.xml.FromUserName + "]]></ToUserName>" + "<FromUserName><![CDATA[" + req.body.xml.ToUserName + "]]></FromUserName>" + "<CreateTime>" + timestamp + "</CreateTime>" + "<MsgType><![CDATA[" + msgType + "]]></MsgType>" + "<Content><![CDATA[" + content + "]]></Content>" + "<FuncFlag>0</FuncFlag>" + "</xml>";
	res.send(textTpl);
}


function checkToken(req, res) {
	var signature = req.query.signature;
	var timestamp = req.query.timestamp;
	var nonce = req.query.nonce;
	var token = config.wechat.TOKEN;
	var echoStr = req.query.echostr;

	var arr = [token, timestamp, nonce];
	arr = arr.sort();
	var arrStr = arr.join('');
	console.log(arrStr);
	arrStr = conn.sha1Cryp(arrStr);
	console.log(arrStr);
	console.log(signature);
	if (arrStr == signature) {
		res.send(echoStr);
		logger.info('check ok');
	} else {
		res.send('error check');
		logger.info('check not ok');
	}
}


module.exports = router;